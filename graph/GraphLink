public class GraphLink<E> {
    protected ListLinked<Vertex<E>> listVertex;

    public GraphLink() {
        listVertex = new ListLinked<Vertex<E>>();
    }

    public void insertVertex(E data) {
        Vertex<E> v = new Vertex<>(data);
        if (listVertex.search(v) == -1) {
            listVertex.insertLast(v);
        }
    }

    public void insertEdge(E verOri, E verDes) {
        int posOri = listVertex.search(new Vertex<>(verOri));
        int posDes = listVertex.search(new Vertex<>(verDes));

        if (posOri == -1 || posDes == -1) return;

        Vertex<E> vOri = listVertex.get(posOri);
        Vertex<E> vDes = listVertex.get(posDes);

        Edge<E> edge1 = new Edge<>(vDes);
        Edge<E> edge2 = new Edge<>(vOri);

        if (vOri.listAdj.search(edge1) == -1) vOri.listAdj.insertLast(edge1);
        if (vDes.listAdj.search(edge2) == -1) vDes.listAdj.insertLast(edge2);
    }

    public String toString() {
        return this.listVertex.toString();
    }
}
